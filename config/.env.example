# Example environment configuration for the VPN infrastructure.  Rename this file to
# `.env` and update the values before deploying.

##############################################################
# Domain configuration
##############################################################

# Your primary domain.  All sub‑domains below will be created under this name.
DOMAIN=example.com

# Fully qualified domain names for each component.  Update to match your DNS.
HEADLAMP_SUBDOMAIN=headlamp.${DOMAIN}
MARZBAN_SUBDOMAIN=marzban.${DOMAIN}
VPN_FRONTEND_SUBDOMAIN=${DOMAIN}
VPN_API_SUBDOMAIN=api.${DOMAIN}
SUBSCRIPTION_SUBDOMAIN=sub.${DOMAIN}
GRAFANA_SUBDOMAIN=grafana.${DOMAIN}

##############################################################
# Database settings
##############################################################

# PostgreSQL user, password and database names.  The same credentials are
# used by the VPN backend and other services.  For production deployments
# you should use strong random values.
POSTGRES_USER=vpn
POSTGRES_PASSWORD=change_me
POSTGRES_DB=vpn
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

##############################################################
# Marzban configuration
##############################################################

# Credentials for the Marzban administrative user.  These will be used
# to log in to the web interface for managing Xray nodes and users.
SUDO_USERNAME=admin
SUDO_PASSWORD=change_me

# Connection string to the Marzban database.  Marzban uses SQLAlchemy so
# any supported PostgreSQL URL can be specified.  See Marzban's README for
# details【46485567583785†L334-L360】.
SQLALCHEMY_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/marzban

# Path to the Xray configuration file used by Marzban.  A default
# configuration is provided under `config_templates/xray_config.json` and
# mounted into the Marzban container at `/config/xray_config.json`.
XRAY_JSON=/config/xray_config.json

# Host and port where Uvicorn will bind the Marzban API.  Leave the
# defaults unless you need to change the internal service port【46485567583785†L330-L358】.
UVICORN_HOST=0.0.0.0
UVICORN_PORT=8000

##############################################################
# VPN backend (FastAPI) and frontend
##############################################################

# The port on which the VPN API will listen inside its container.  The
# Kubernetes Service exposes this port to the cluster.
SERVER_PORT=8080

# Connection string used by the VPN backend to connect to PostgreSQL.  The
# `schema=public` suffix is required by Prisma migrations【897932875963233†L88-L91】.
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public

# Base URL for the VPN frontend to use when making API requests.  When
# deploying behind an ingress controller this should remain `/api`.
VITE_API_BASE_URL=/api

# Logging settings for the VPN backend.  See the project's documentation
# for details on these variables【897932875963233†L101-L107】.
LOG_LEVEL=info
LOG_FILE_ENABLED=true
PINO_PRETTY_DISABLE=false

##############################################################
# Optional Hanko authentication service
##############################################################

# Secret used to sign JWT tokens for Hanko authentication【897932875963233†L121-L131】.
HANKO_JWT_SECRET=change_me

# WebAuthn relying party settings.  Should match your primary domain.
HANKO_WEBAUTHN_RELYING_PARTY_ID=${DOMAIN}
HANKO_WEBAUTHN_RELYING_PARTY_ORIGINS=https://${DOMAIN}

##############################################################
# Grafana configuration
##############################################################

# Initial Grafana administrator credentials.  Use strong values and
# rotate them after initial deployment.
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=change_me

##############################################################
# Subscription service
##############################################################

# API key or secret for the subscription service.  This can be used to
# protect the subscription endpoint or integrate with external systems.
SUBSCRIPTION_API_KEY=change_me